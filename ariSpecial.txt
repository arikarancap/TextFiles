import { StyleSheet, Text, View, Switch, ScrollView, LayoutAnimation } from 'react-native'
import React, { useState, useEffect } from 'react'
import { COLORS, DATA } from '../../../constants';
import { toPascalCase } from '../../../components';
import AntDesign from 'react-native-vector-icons/AntDesign'
export const Special = ({ route }) => {
    const { name, data } = route?.params;
    console.log(data)
    // console.log(msg)
    const [system, setSystem] = useState('Groups');
    const [isEnabled, setIsEnabled] = useState(false);
    const [tracks, setTracks] = useState();
    const [color, setColor] = useState(-1);
    const [tones, setTones] = useState(-1);


    const toggleSwitch = () => {
        setIsEnabled(previousState => !previousState);
        LayoutAnimation.configureNext(LayoutAnimation.Presets.spring)
    }
    let allKeys;
    console.log(DATA.common.tracks.normal)
    DATA.common.tracks.normal.map((item, index) => {
        // console.log(Object.keys(item));
        allKeys = Object.keys(item);
    })
    myArray = data
    // let arr = new Array(myObject)
    // arr.map((item, index) => {
    //   // console.log(item.normal);
    //   // allKeys = Object.keys(item);
    // })
    return (
        <View style={{ flex: 1 }}

        >

            <ScrollView>
                {
                    myArray.map((item, index) => {
                        console.log(item, index)
                        return (
                            <View key={index} style={{ alignItems: 'center' }}  >
                                <View style={{
                                    height: 40, width: '100%', backgroundColor: 'lightgrey',
                                    flexDirection: 'row',
                                    alignItems: 'center',
                                    justifyContent: 'space-around',
                                    margin: 5,
                                    borderRadius: 0
                                }} >
                                    <Text style={{ color: 'black', fontSize: 15, fontWeight: '500' }} >{toPascalCase(allKeys[0])}</Text>
                                    <Text style={{ color: 'black', fontSize: 15, fontWeight: '500' }} >{toPascalCase(String(item['track_name']))}</Text>
                                    <AntDesign name={'downcircleo'} size={20} color={color == index ? 'green' : 'black'}
                                        onPress={() => {
                                            setColor(index == color ? -1 : index)
                                            LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut)

                                        }}
                                    />
                                </View>
                                {
                                    color == index
                                        ?
                                        <View style={{
                                            width: '90%',
                                            backgroundColor: 'lightgrey',
                                            borderRadius: 10,
                                            alignItems: 'center',
                                            margin: 5,
                                            padding: 5
                                        }} >
                                            <View style={{ width: '100%', justifyContent: 'center', alignItems: 'flex-end', marginRight: '20%', marginTop: '1%' }} >
                                                <AntDesign name={'edit'} size={20} color={color == index ? 'green' : 'black'}
                                                    onPress={() => {
                                                        LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut)
                                                    }}
                                                />
                                            </View>
                                            <View style={[styles.GroupContainer, {}]}>
                                                <Text style={[styles.containerText, {}]}>{toPascalCase(allKeys[index])}</Text>
                                                <Text style={[styles.containerText, { width: '43%' }]}>{toPascalCase(String(item["track_number"]))}</Text>
                                            </View>
                                            <View style={[styles.GroupContainer, {}]}>
                                                <Text style={[styles.containerText, {}]}>{toPascalCase(allKeys[2])}</Text>
                                                <Text style={[styles.containerText, { width: '43%' }]}>{toPascalCase(String(item["duty_cyle_pct"]))}</Text>
                                            </View>
                                            <View style={[styles.GroupContainer, {}]}>
                                                <Text style={[styles.containerText, {}]}>{toPascalCase(allKeys[3])}</Text>
                                                <Text style={[styles.containerText, { width: '43%' }]}>{toPascalCase(String(item["duty_cyle_pct"]))}</Text>
                                            </View>
                                            <View style={[styles.GroupContainer, {}]}>
                                                <Text style={[styles.containerText, {}]}>{toPascalCase(allKeys[4])}</Text>
                                                <Text style={[styles.containerText, { width: '43%' }]}>{toPascalCase(String(item["duty_cyle_pct"]))}</Text>
                                            </View>
                                            <View style={[styles.GroupContainer, {}]}>
                                                <Text style={[styles.containerText, {}]}>{toPascalCase(allKeys[5])}</Text>
                                                <Text style={[styles.containerText, { width: '43%' }]}>{toPascalCase(String(item["duty_cyle_pct"]))}</Text>
                                            </View>
                                            <View style={[styles.GroupContainer, {}]}>
                                                <Text style={[styles.containerText, {}]}>{toPascalCase(allKeys[6])}</Text>
                                                <Text style={[styles.containerText, { width: '43%' }]}>{toPascalCase(String(item["duty_cyle_pct"]))}</Text>
                                            </View>
                                            <View style={{ flexDirection: 'row', width: '100%', alignItems: 'center', justifyContent: 'space-around', margin: 5, marginBottom: 10 }} >
                                                <Text style={{
                                                    color: COLORS.black,
                                                    fontWeight: 'bold',
                                                    fontSize: 18,
                                                    marginHorizontal: 8
                                                }}>{toPascalCase(allKeys[7])}</Text>
                                                <AntDesign name={'downcircleo'} size={30} color={tones == index ? 'green' : 'black'}
                                                    onPress={() => {
                                                        LayoutAnimation.configureNext(LayoutAnimation.Presets.linear)
                                                        setTones(index == tones ? -1 : index)
                                                    }}
                                                />
                                                <AntDesign name={'addfile'} size={25} color={color == index ? 'green' : 'black'}
                                                    onPress={() => {
                                                        LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut)
                                                    }}
                                                />
                                                <AntDesign name={'edit'} size={25} color={color == index ? 'darkblue' : 'black'}
                                                    onPress={() => {
                                                        LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut)
                                                    }}
                                                />
                                            </View>
                                            <View>
                                                {tones == index ?
                                                    item['tones'].map((item, index) => {
                                                        return (
                                                            <View key={index} style={{ alignItems: 'center', }} >
                                                                {index === 0 ?
                                                                    <View style={[styles.GroupContainer, {}]}>
                                                                        <Text style={[styles.containerText, { width: '40%', textAlign: 'center', borderLeftWidth: 1, borderColor: 'black', borderTopWidth: 1, borderRightWidth: 0.5 }]}>{'Frequency'}</Text>
                                                                        <Text style={[styles.containerText, { width: '40%', textAlign: 'center', borderRightWidth: 1, borderColor: 'black', borderTopWidth: 1, borderLeftWidth: 1 }]}>{'milli seconds'}</Text>
                                                                    </View>
                                                                    : null}
                                                                <View style={[styles.GroupContainer, {}]}>
                                                                    <Text style={[styles.containerText, { width: '40%', textAlign: 'center', borderLeftWidth: 1, borderColor: 'black', borderTopWidth: 1, borderRightWidth: 0.5 }]}>{toPascalCase(String(item[0]))}</Text>
                                                                    <Text style={[styles.containerText, { width: '40%', textAlign: 'center', borderRightWidth: 1, borderColor: 'black', borderTopWidth: 1, borderLeftWidth: 1 }]}>{toPascalCase(String(item[1]))}</Text>
                                                                </View>
                                                            </View>
                                                        )
                                                    })
                                                    : null}
                                            </View>
                                        </View>
                                        : null
                                }
                            </View>
                        )
                    })
                }
            </ScrollView>
        </View>
    )
}


const styles = StyleSheet.create({
    text1: {
        flex: 1, marginLeft: 15, color: COLORS.black, padding: 10
    },
    text2: {
        flex: 1, fontSize: 20, textAlign: 'center', color: COLORS.white, fontWeight: 'bold', letterSpacing: 5

    },
    text3: {
        flex: 1, marginRight: 10, textAlign: 'right', color: COLORS.black,
    },
    header: {
        display: 'flex',
        width: '100%',
        height: 50,
        flexDirection: 'row',
        alignItems: 'center',
        justifyContent: 'center',
        backgroundColor: COLORS.darkBlue,
    },
    headerContainer: {
        justifyContent: 'center', height: 30, marginBottom: 8, marginLeft: 20,
    },
    headerText: {
        color: COLORS.black, fontWeight: 'bold', fontSize: 18, width: '48%', marginHorizontal: 8
    },
    container: {
        flexDirection: 'row', alignItems: 'center', justifyContent: 'space-around'
    },
    containerText: {
        color: COLORS.black,
        fontSize: 14,
        width: '57%',
        fontWeight: '400',
        marginVertical: 0,
        textAlign: 'justify',
        // borderWidth: 1,
        // borderColor: 'black',
        padding: 3
    },
    Tab: {
        height: 40,
        backgroundColor: 'lightgreen',
        // width: 180,
        width: '46%',
        margin: 10,
        alignItems: 'center',
        justifyContent: 'center',
        borderRadius: 5,

    },
    TabText: {
        color: COLORS.black, fontSize: 15,
    },
    GroupContainer: {
        flexDirection: 'row',
        alignItems: 'center',
    }
})